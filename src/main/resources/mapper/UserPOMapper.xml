<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ljfl.server.dao.mapper.UserPOMapper" >
  <resultMap id="BaseResultMap" type="com.ljfl.server.domain.po.UserPO" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="head_img" property="headImg" jdbcType="VARCHAR" />
    <result column="passward" property="passward" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="age" property="age" jdbcType="TINYINT" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="city_code" property="cityCode" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="points" property="points" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ljfl.server.domain.po.UserPO" extends="BaseResultMap" >
    <result column="note" property="note" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, nick_name, head_img, passward, openid, sex, age, login_time, city_code, 
    mobile, count, is_delete, create_time, update_time, points
  </sql>
  <sql id="Blob_Column_List" >
    note
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ljfl.server.domain.po.UserPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ljfl.server.domain.po.UserPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ljfl.server.domain.po.UserPOExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ljfl.server.domain.po.UserPO" >
    insert into user (id, name, nick_name, 
      head_img, passward, openid, 
      sex, age, login_time, 
      city_code, mobile, count, 
      is_delete, create_time, update_time, 
      points, note)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{headImg,jdbcType=VARCHAR}, #{passward,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, 
      #{sex,jdbcType=BIT}, #{age,jdbcType=TINYINT}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{cityCode,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{points,jdbcType=BIGINT}, #{note,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ljfl.server.domain.po.UserPO" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="headImg != null" >
        head_img,
      </if>
      <if test="passward != null" >
        passward,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="cityCode != null" >
        city_code,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="points != null" >
        points,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null" >
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="passward != null" >
        #{passward,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="age != null" >
        #{age,jdbcType=TINYINT},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityCode != null" >
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="points != null" >
        #{points,jdbcType=BIGINT},
      </if>
      <if test="note != null" >
        #{note,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ljfl.server.domain.po.UserPOExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.headImg != null" >
        head_img = #{record.headImg,jdbcType=VARCHAR},
      </if>
      <if test="record.passward != null" >
        passward = #{record.passward,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=TINYINT},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cityCode != null" >
        city_code = #{record.cityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.points != null" >
        points = #{record.points,jdbcType=BIGINT},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      head_img = #{record.headImg,jdbcType=VARCHAR},
      passward = #{record.passward,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      age = #{record.age,jdbcType=TINYINT},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      city_code = #{record.cityCode,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      points = #{record.points,jdbcType=BIGINT},
      note = #{record.note,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      head_img = #{record.headImg,jdbcType=VARCHAR},
      passward = #{record.passward,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      age = #{record.age,jdbcType=TINYINT},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      city_code = #{record.cityCode,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      points = #{record.points,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ljfl.server.domain.po.UserPO" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null" >
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="passward != null" >
        passward = #{passward,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cityCode != null" >
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="points != null" >
        points = #{points,jdbcType=BIGINT},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ljfl.server.domain.po.UserPO" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      passward = #{passward,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      age = #{age,jdbcType=TINYINT},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      city_code = #{cityCode,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      points = #{points,jdbcType=BIGINT},
      note = #{note,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ljfl.server.domain.po.UserPO" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      passward = #{passward,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      age = #{age,jdbcType=TINYINT},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      city_code = #{cityCode,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      points = #{points,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>